[{"C:\\Users\\khain\\Downloads\\Learn_Web\\Learn_full_stack\\react_apps\\react_shopping\\src\\index.js":"1","C:\\Users\\khain\\Downloads\\Learn_Web\\Learn_full_stack\\react_apps\\react_shopping\\src\\reportWebVitals.js":"2","C:\\Users\\khain\\Downloads\\Learn_Web\\Learn_full_stack\\react_apps\\react_shopping\\src\\Components\\Main.js":"3","C:\\Users\\khain\\Downloads\\Learn_Web\\Learn_full_stack\\react_apps\\react_shopping\\src\\Contexts\\MyContext.js":"4","C:\\Users\\khain\\Downloads\\Learn_Web\\Learn_full_stack\\react_apps\\react_shopping\\src\\Components\\Cart.js":"5","C:\\Users\\khain\\Downloads\\Learn_Web\\Learn_full_stack\\react_apps\\react_shopping\\src\\Components\\Header.js":"6","C:\\Users\\khain\\Downloads\\Learn_Web\\Learn_full_stack\\react_apps\\react_shopping\\src\\Components\\Item.js":"7","C:\\Users\\khain\\Downloads\\Learn_Web\\Learn_full_stack\\react_apps\\react_shopping\\src\\Components\\CartItem.js":"8"},{"size":513,"mtime":1608764793545,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":1549,"mtime":1611973531420,"results":"12","hashOfConfig":"10"},{"size":94,"mtime":1608744404788,"results":"13","hashOfConfig":"10"},{"size":531,"mtime":1611982857546,"results":"14","hashOfConfig":"10"},{"size":128,"mtime":1608786306876,"results":"15","hashOfConfig":"10"},{"size":1757,"mtime":1611973489196,"results":"16","hashOfConfig":"10"},{"size":1344,"mtime":1612028353935,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"afz9n0",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\khain\\Downloads\\Learn_Web\\Learn_full_stack\\react_apps\\react_shopping\\src\\index.js",[],["38","39"],"C:\\Users\\khain\\Downloads\\Learn_Web\\Learn_full_stack\\react_apps\\react_shopping\\src\\reportWebVitals.js",[],"C:\\Users\\khain\\Downloads\\Learn_Web\\Learn_full_stack\\react_apps\\react_shopping\\src\\Components\\Main.js",["40","41","42"],"import React, {useState, useEffect} from \"react\";\r\n\r\nimport MyContext from \"../Contexts/MyContext\"\r\n\r\nimport Header from \"./Header\"\r\nimport Item from \"./Item\";\r\nimport Cart from \"./Cart\";\r\n\r\nimport \"../Main.css\"\r\n\r\nexport default function Main(props){\r\n    var [orders, setOrders] = useState([])\r\n    var [cart, setCart] =  useState([])\r\n    var [screen, setScreen] = useState(0)\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://quiet-everglades-39046.herokuapp.com/orders\")\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                setOrders(res)\r\n                //do this after the previous cart because the orders might not been set\r\n                var newCart = [...cart]\r\n                newCart.push({item: res[0],quantity: 2})\r\n                newCart.push({item: res[3], quantity: 3})\r\n                setCart(newCart)\r\n            })\r\n    },[])\r\n\r\n    return(\r\n        <MyContext.Provider value={[cart, setCart]}>\r\n            <Header/>\r\n            <nav>\r\n                <li><a href=\"#\" onClick={() => setScreen(0)}>Market</a></li>\r\n                <li><a href=\"#\" onClick={() => setScreen(1)}>Your cart</a></li>\r\n            </nav>\r\n\r\n            {\r\n                (screen === 0) ? \r\n                <div className=\"container\">\r\n                {\r\n                    orders.map(order => \r\n                        <Item order={order}/>)\r\n                }\r\n                </div> :\r\n                <Cart/>\r\n            }\r\n            \r\n           \r\n        </MyContext.Provider>\r\n        \r\n    )\r\n}","C:\\Users\\khain\\Downloads\\Learn_Web\\Learn_full_stack\\react_apps\\react_shopping\\src\\Contexts\\MyContext.js",[],"C:\\Users\\khain\\Downloads\\Learn_Web\\Learn_full_stack\\react_apps\\react_shopping\\src\\Components\\Cart.js",["43","44"],"import React, {useContext, useEffect} from \"react\"\r\n\r\nimport MyContext from \"../Contexts/MyContext\"\r\nimport CartItem from \"./CartItem\"\r\nexport default function Cart(props){\r\n    var [cart, setCart]  = useContext(MyContext)\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"orders-container\">\r\n                {\r\n                    cart.map(order => <CartItem order = {order} />)\r\n                }\r\n            </div>\r\n            <button onClick={() => alert(\"Thanks for buying!\")}>Buy</button>\r\n        </div>\r\n    )\r\n}","C:\\Users\\khain\\Downloads\\Learn_Web\\Learn_full_stack\\react_apps\\react_shopping\\src\\Components\\Header.js",[],"C:\\Users\\khain\\Downloads\\Learn_Web\\Learn_full_stack\\react_apps\\react_shopping\\src\\Components\\Item.js",["45","46","47"],"import React, {useState, useContext, useEffect} from \"react\"\r\n\r\nimport MyContext from \"../Contexts/MyContext\"\r\nexport default function Order(props){\r\n    var [cart, setCart] = useContext(MyContext)\r\n    var [tempQuantity, setTempQuantity] = useState(1)\r\n\r\n    function addItem(){\r\n        var added = false\r\n            cart.map(order => {\r\n                //if the order name is already inside cart, then alert 'added!'\r\n                if(order.item.name===props.order.name) {\r\n                    var newCart = [...cart]\r\n                    newCart[newCart.indexOf(order)].quantity+=parseInt(tempQuantity)\r\n                    setCart(newCart)\r\n                    alert(\"Added!\")\r\n                    added = true\r\n                }\r\n            })\r\n        \r\n        //if not added, alert \"added new item\"\r\n        if(!added){\r\n            var newCart = [...cart]\r\n            newCart.push({item: props.order, quantity: tempQuantity})\r\n            setCart(newCart)\r\n            alert(\"Added new item!\")\r\n        }\r\n    }\r\n    function handleInputChange(e){\r\n        setTempQuantity(e.target.value)\r\n    }\r\n    \r\n    return(\r\n        \r\n        <div class=\"m-10 dynamic-bg\">\r\n            <a href=\"#\">\r\n            <img src={props.order.href} alt={props.order.name} width=\"300\" height=\"250\"/>\r\n            <p>{props.order.name}</p>\r\n            <p>Price: ${props.order.price}</p> \r\n            <p>Unit: {props.order.unit}</p>\r\n            {\r\n                <div className = \"horizontal-flex-container\">\r\n                    <input type=\"Number\" value={tempQuantity} onChange={handleInputChange}/>\r\n                    <button onClick = {addItem}> Add </button>\r\n                </div>\r\n            }\r\n            </a>\r\n        </div>\r\n        \r\n    )\r\n}","C:\\Users\\khain\\Downloads\\Learn_Web\\Learn_full_stack\\react_apps\\react_shopping\\src\\Components\\CartItem.js",["48"],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":27,"column":7,"nodeType":"55","endLine":27,"endColumn":9,"suggestions":"56"},{"ruleId":"57","severity":1,"message":"58","line":33,"column":21,"nodeType":"59","endLine":33,"endColumn":62},{"ruleId":"57","severity":1,"message":"58","line":34,"column":21,"nodeType":"59","endLine":34,"endColumn":62},{"ruleId":"60","severity":1,"message":"61","line":1,"column":28,"nodeType":"62","messageId":"63","endLine":1,"endColumn":37},{"ruleId":"60","severity":1,"message":"64","line":6,"column":16,"nodeType":"62","messageId":"63","endLine":6,"endColumn":23},{"ruleId":"60","severity":1,"message":"61","line":1,"column":38,"nodeType":"62","messageId":"63","endLine":1,"endColumn":47},{"ruleId":"65","severity":1,"message":"66","line":10,"column":28,"nodeType":"67","messageId":"68","endLine":10,"endColumn":30},{"ruleId":"57","severity":1,"message":"58","line":36,"column":13,"nodeType":"59","endLine":36,"endColumn":25},{"ruleId":"69","severity":1,"message":"70","line":13,"column":17,"nodeType":"59","endLine":13,"endColumn":82},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cart'. Either include it or remove the dependency array.","ArrayExpression",["73"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'setCart' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"74","fix":"75"},"Update the dependencies array to be: [cart]",{"range":"76","text":"77"},[887,889],"[cart]"]