{"version":3,"sources":["Contexts/MyContext.js","Components/Header.js","Components/Item.js","Components/CartItem.js","Components/Cart.js","Components/Main.js","reportWebVitals.js","index.js"],"names":["MyContext","React","createContext","Header","props","Order","useContext","cart","setCart","useState","tempQuantity","setTempQuantity","class","href","src","order","alt","name","width","height","price","unit","className","type","value","onChange","e","target","onClick","added","map","item","newCart","indexOf","quantity","parseInt","alert","push","CartItem","orderQuantity","setOrderQuantity","disableDown","setDisableDown","disableUp","setDisableUp","useEffect","index","subTotal","console","log","disabled","Array","_","i","splice","Cart","total","setTotal","tempTotal","Main","orders","setOrders","screen","setScreen","fetch","then","response","json","res","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b6125cb.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nvar MyContext = React.createContext()\r\n\r\nexport default MyContext","import React from \"react\"\r\nexport default function Header(props){\r\n    return(\r\n        <h1>Welcome to ExpressBuy</h1>\r\n    )\r\n}","import React, {useState, useContext, useEffect} from \"react\"\r\n\r\nimport MyContext from \"../Contexts/MyContext\"\r\nexport default function Order(props){\r\n    var [cart, setCart] = useContext(MyContext)\r\n    var [tempQuantity, setTempQuantity] = useState(1)\r\n\r\n    function addItem(){\r\n        var added = false\r\n            cart.map(order => {\r\n                //if the order name is already inside cart, then alert 'added!'\r\n                if(order.item.name===props.order.name) {\r\n                    var newCart = [...cart]\r\n                    newCart[newCart.indexOf(order)].quantity+=parseInt(tempQuantity)\r\n                    setCart(newCart)\r\n                    alert(\"Added!\")\r\n                    added = true\r\n                }\r\n            })\r\n        \r\n        //if not added, alert \"added new item\"\r\n        if(!added){\r\n            var newCart = [...cart]\r\n            newCart.push({item: props.order, quantity: tempQuantity})\r\n            setCart(newCart)\r\n            alert(\"Added new item!\")\r\n        }\r\n    }\r\n    function handleInputChange(e){\r\n        setTempQuantity(e.target.value)\r\n    }\r\n    \r\n    return(\r\n        \r\n        <div class=\"m-10 dynamic-bg\">\r\n            <a href=\"#\">\r\n            <img src={props.order.href} alt={props.order.name} width=\"300\" height=\"250\"/>\r\n            <p>{props.order.name}</p>\r\n            <p>Price: ${props.order.price}</p> \r\n            <p>Unit: {props.order.unit}</p>\r\n            {\r\n                <div className = \"horizontal-flex-container\">\r\n                    <input type=\"Number\" value={tempQuantity} onChange={handleInputChange}/>\r\n                    <button onClick = {addItem}> Add </button>\r\n                </div>\r\n            }\r\n            </a>\r\n        </div>\r\n        \r\n    )\r\n}","import React, {useState, useEffect, useContext} from \"react\";\r\nimport {AiOutlineArrowUp, AiOutlineArrowDown} from 'react-icons/ai';\r\n\r\nimport MyContext from \"../Contexts/MyContext\"\r\nexport default function CartItem(props){\r\n    var [orderQuantity, setOrderQuantity] = useState(props.order.quantity)\r\n    var [disableDown, setDisableDown] = useState(false)\r\n    var [disableUp, setDisableUp] = useState(false)\r\n    var [cart, setCart] = useContext(MyContext)\r\n\r\n    function changeQuantity(e) {\r\n        setOrderQuantity(e.target.value)\r\n    }\r\n\r\n    function removeItem(){\r\n        var newCart = [...cart]\r\n        var index = newCart.indexOf(props.order)\r\n        newCart.splice(index,1)\r\n        setCart(newCart)\r\n    }\r\n\r\n    useEffect(()=> {\r\n        orderQuantity <=1 ? setDisableDown(true) : setDisableDown(false)\r\n        orderQuantity ===10 ? setDisableUp(true) : setDisableDown(false)\r\n        //not only setting the quantity, we also need to set the price in the context\r\n        var newCart = [...cart]\r\n        var index = newCart.indexOf(props.order)\r\n        newCart[index].subTotal = orderQuantity * props.order.item.price\r\n        console.log(newCart[index].subTotal)\r\n        setCart(newCart)\r\n    },[orderQuantity])\r\n\r\n    return(\r\n        <div className=\"order-container dynamic-bg\">\r\n            <div>\r\n                <h3>{props.order.item.name}</h3>\r\n                <img src = {props.order.item.href} width = \"100\" height = \"100\"/>\r\n            </div>\r\n\r\n            <div>\r\n                <p>Price: ${props.order.item.price} per {props.order.item.unit}</p>\r\n                <p>Quantity:</p>\r\n                <div className=\"quantity-control\">\r\n                    <button \r\n                        className = \"transparent-bg\" \r\n                        onClick = {() => setOrderQuantity(orderQuantity-1)}\r\n                        disabled = {disableDown}\r\n                    ><AiOutlineArrowDown/> </button>\r\n                    <select value = {orderQuantity} onChange = {changeQuantity}>\r\n                    {\r\n                        [...Array(11)].map((_,i) => \r\n                            i!==0 && <option value = {i}>{i}</option>)\r\n                    }\r\n                    </select>\r\n                    <button \r\n                        className = \"transparent-bg\"\r\n                        onClick = {() => setOrderQuantity(orderQuantity+1)}\r\n                        disabled = {disableUp}\r\n                    ><AiOutlineArrowUp /></button>\r\n                </div>\r\n                <h4>Subtotal: ${orderQuantity * props.order.item.price}</h4>\r\n                <button onClick = {removeItem}>Remove</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useContext, useState, useEffect} from \"react\"\r\n\r\nimport MyContext from \"../Contexts/MyContext\"\r\nimport CartItem from \"./CartItem\"\r\nexport default function Cart(props){\r\n    var [cart]  = useContext(MyContext)\r\n    var [total, setTotal] = useState(0)\r\n\r\n    useEffect(() => {\r\n        var tempTotal = 0\r\n        cart.map(order => tempTotal += parseInt(order.subTotal))\r\n        setTotal(tempTotal)\r\n    },[cart])\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"orders-container\">\r\n                {\r\n                    \r\n                    cart.map(order => <CartItem order = {order} />)\r\n                }\r\n            </div>\r\n            <h2>Total ${total}</h2>\r\n            <button onClick={() => alert(\"Thanks for buying!\")}>Buy</button>\r\n        </div>\r\n    )\r\n}","import React, {useState, useEffect} from \"react\";\r\n\r\nimport MyContext from \"../Contexts/MyContext\"\r\n\r\nimport Header from \"./Header\"\r\nimport Item from \"./Item\";\r\nimport Cart from \"./Cart\";\r\n\r\nimport \"../Main.css\"\r\n\r\nexport default function Main(props){\r\n    var [orders, setOrders] = useState([])\r\n    var [cart, setCart] =  useState([])\r\n    var [screen, setScreen] = useState(0)\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://quiet-everglades-39046.herokuapp.com/orders\")\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                setOrders(res)\r\n                //do this after the previous cart because the orders might not been set\r\n                var newCart = [...cart]\r\n                newCart.push({item: res[0],quantity: 2, subTotal: res[0].price *2})\r\n                newCart.push({item: res[3], quantity: 3, subTotal: res[3].price * 3})\r\n                setCart(newCart)\r\n            })\r\n    },[])\r\n\r\n    return(\r\n        <MyContext.Provider value={[cart, setCart]}>\r\n            <Header/>\r\n            <nav>\r\n                <li><a href=\"#\" onClick={() => setScreen(0)}>Market</a></li>\r\n                <li><a href=\"#\" onClick={() => setScreen(1)}>Your cart</a></li>\r\n            </nav>\r\n\r\n            {\r\n                (screen === 0) ? \r\n                <div className=\"container\">\r\n                {\r\n                    orders.map(order => \r\n                        <Item order={order}/>)\r\n                }\r\n                </div> :\r\n                <Cart/>\r\n            }\r\n            \r\n           \r\n        </MyContext.Provider>\r\n        \r\n    )\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Main from \"./Components/Main\"\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}